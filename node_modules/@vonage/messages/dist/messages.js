"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Messages = void 0;
const server_client_1 = require("@vonage/server-client");
const debug_1 = __importDefault(require("debug"));
const log = (0, debug_1.default)('vonage:messages');
class Messages extends server_client_1.Client {
    /**
       * Handle various ways the Messages API handles auth
       * The Messages API handles both JWT (preferred) as well as Basic so we
       * cannot just set a local authType
       *
       * @param {any} request - Object containing request data
       */
    async addAuthenticationToRequest(request) {
        log('Auth config', this.auth);
        this.authType = server_client_1.AuthenticationType.KEY_SECRET;
        if (this.auth.applicationId && this.auth.privateKey) {
            log('Adding JWT token to request');
            this.authType = server_client_1.AuthenticationType.JWT;
        }
        if (this.auth.signature) {
            log('Signing the request');
            this.authType = server_client_1.AuthenticationType.SIGNATURE;
        }
        return super.addAuthenticationToRequest(request);
    }
    async send(message) {
        const resp = await this.sendPostRequest(`${this.config.apiHost}/v1/messages`, JSON.parse(JSON.stringify(server_client_1.Client.transformers.snakeCaseObjectKeys(message, true))));
        return {
            messageUUID: resp.data?.message_uuid,
        };
    }
}
exports.Messages = Messages;
//# sourceMappingURL=messages.js.map