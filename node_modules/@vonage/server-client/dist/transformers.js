"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.kebabCaseObjectKeys = exports.snakeCaseObjectKeys = exports.camelCaseObjectKeys = exports.transformObjectKeys = void 0;
const lodash_camelcase_1 = __importDefault(require("lodash.camelcase"));
const lodash_snakecase_1 = __importDefault(require("lodash.snakecase"));
const lodash_kebabcase_1 = __importDefault(require("lodash.kebabcase"));
const lodash_partial_1 = __importDefault(require("lodash.partial"));
const lodash_isobject_1 = __importDefault(require("lodash.isobject"));
const transformObjectKeys = (transformFn, objectToTransform, deep = false, preserve = false) => {
    const transformedObject = {
        ...(preserve ? objectToTransform : {}),
    };
    for (const prop in objectToTransform) {
        if (!Object.prototype.hasOwnProperty.call(objectToTransform, prop)) {
            continue;
        }
        const newKey = transformFn(prop);
        const value = objectToTransform[prop];
        if (!deep || !(0, lodash_isobject_1.default)(value)) {
            transformedObject[newKey] = value;
            continue;
        }
        if (Array.isArray(value)) {
            transformedObject[newKey] = value.map((t) => (0, lodash_isobject_1.default)(t)
                ? (0, exports.transformObjectKeys)(transformFn, t, deep, preserve)
                : t);
            continue;
        }
        transformedObject[newKey] = (0, exports.transformObjectKeys)(transformFn, value, deep, preserve);
    }
    return transformedObject;
};
exports.transformObjectKeys = transformObjectKeys;
exports.camelCaseObjectKeys = (0, lodash_partial_1.default)(exports.transformObjectKeys, lodash_camelcase_1.default);
exports.snakeCaseObjectKeys = (0, lodash_partial_1.default)(exports.transformObjectKeys, lodash_snakecase_1.default);
exports.kebabCaseObjectKeys = (0, lodash_partial_1.default)(exports.transformObjectKeys, lodash_kebabcase_1.default);
//# sourceMappingURL=transformers.js.map