"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.Verify = void 0;
const server_client_1 = require("@vonage/server-client");
const index_1 = require("./enums/index");
const lodash_omit_1 = __importDefault(require("lodash.omit"));
class Verify extends server_client_1.Client {
    async sendControl(command, requestId) {
        const data = {
            request_id: requestId,
            cmd: index_1.Command.CANCEL,
        };
        // eslint-disable-next-line max-len
        const resp = await this.sendPostRequest(`${this.config.apiHost}/verify/control/json`, data);
        return server_client_1.Client.transformers.camelCaseObjectKeys(resp.data, true, true);
    }
    async cancel(requestId) {
        return this.sendControl(index_1.Command.CANCEL, requestId);
    }
    async trigger(requestId) {
        return this.sendControl(index_1.Command.TRIGGER_NEXT_EVENT, requestId);
    }
    async check(requestId, code) {
        // eslint-disable-next-line max-len
        const resp = await this.sendPostRequest(`${this.config.apiHost}/verify/check/json`, {
            request_id: requestId,
            code: code,
        });
        return server_client_1.Client.transformers.camelCaseObjectKeys(resp.data, true, true);
    }
    async search(requestId) {
        const resp = await this.sendGetRequest(`${this.config.apiHost}/verify/search/json`, { request_id: requestId });
        return server_client_1.Client.transformers.camelCaseObjectKeys(resp.data, true, true);
    }
    async start(request) {
        const url = 'brand' in request
            ? `${this.config.apiHost}/verify/json`
            : `${this.config.apiHost}/verify/psd2/json`;
        const resp = await this.sendPostRequest(url, server_client_1.Client.transformers.snakeCaseObjectKeys((0, lodash_omit_1.default)(request, ['language'])));
        return server_client_1.Client.transformers.camelCaseObjectKeys(resp.data, true, true);
    }
}
exports.Verify = Verify;
//# sourceMappingURL=verify.js.map