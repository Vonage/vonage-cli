"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.Connect = void 0;
const enums_1 = require("../../enums");
class Connect {
    action = enums_1.NCCOActions.CONNECT;
    endpoint;
    from;
    randomFromNumber;
    eventType;
    timeout;
    limit;
    machineDetection;
    eventUrl;
    eventMethod;
    ringbackTone;
    constructor(endpoint, from, randomFromNumber, eventType, timeout, limit, machineDetection, eventUrl, eventMethod, ringbackTone) {
        this.endpoint = [endpoint];
        if (from) {
            this.from = from;
        }
        if (randomFromNumber) {
            this.randomFromNumber = randomFromNumber;
        }
        if (eventType) {
            this.eventType = eventType;
        }
        if (timeout) {
            this.timeout = timeout;
        }
        if (limit) {
            this.limit = limit;
        }
        if (machineDetection) {
            this.machineDetection = machineDetection;
        }
        if (eventUrl) {
            this.eventUrl = [eventUrl];
        }
        if (eventMethod) {
            this.eventMethod = eventMethod;
        }
        if (ringbackTone) {
            this.ringbackTone = ringbackTone;
        }
    }
    serializeToNCCO() {
        const data = {
            action: enums_1.NCCOActions.CONNECT,
            endpoint: this.endpoint,
        };
        if (this.from) {
            data.from = this.from;
        }
        if (this.randomFromNumber) {
            data.randomFromNumber = this.randomFromNumber;
        }
        if (this.eventType) {
            data.eventType = this.eventType;
        }
        if (this.timeout) {
            data.timeout = this.timeout;
        }
        if (this.limit) {
            data.limit = this.limit;
        }
        if (this.machineDetection) {
            data.machineDetection = this.machineDetection;
        }
        if (this.eventUrl) {
            data.eventUrl = this.eventUrl;
        }
        if (this.eventMethod) {
            data.eventMethod = this.eventMethod;
        }
        if (this.ringbackTone) {
            data.ringbackTone = this.ringbackTone;
        }
        return data;
    }
}
exports.Connect = Connect;
//# sourceMappingURL=Connect.js.map